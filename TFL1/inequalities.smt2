(set-logic QF_NIA)
(declare-fun a_h () Int)
(declare-fun b_h () Int)
(declare-fun c_h () Int)
(declare-fun d_h () Int)
(assert (> a_h 0))
(assert (> b_h 0))
(assert (> c_h 0))
(assert (> d_h 0))
(assert (or (and (or (> (* 1 a_h) 0) (and (> (* 1 a_h) 0) (or (> (* 1 (* a_h b_h)) (* 1 a_h)) (and (= (* 1 (* a_h b_h)) (* 1 a_h))(> b_h b_h)))))(or (>= (* 1 c_h) 0) (and (>= (* 1 c_h) 0) (or (>= (+ (* 1 (* a_h d_h)) (* 1 c_h))  (* 1 c_h)) (and (= (+ (* 1 (* a_h d_h)) (* 1 c_h))  (* 1 c_h))(>= d_h d_h)))))) (and (and (= (* 1 a_h) 0)(= (* 1 (* a_h b_h)) (* 1 a_h))(= b_h b_h))(or (> (* 1 c_h) 0) (and (> (* 1 c_h) 0) (or (> (+ (* 1 (* a_h d_h)) (* 1 c_h))  (* 1 c_h)) (and (= (+ (* 1 (* a_h d_h)) (* 1 c_h))  (* 1 c_h))(> d_h d_h))))))))
(check-sat)
(get-model)
